{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACA,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEH,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCJTC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCCG,E,kDAzCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARR,E,qDAWd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAAEhB,SAAUe,S,0BAG1C,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,OACDpB,EAAWkB,KAAKV,MAAMR,SACtBS,EAAcS,KAAKV,MAAMC,YACzBY,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGpD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAa,GAAC,OAAI,EAAKD,SAAS,CAACP,YAAaQ,EAAEE,OAAOC,WAE1D,cAAC,EAAD,CAAUpB,SAAUqB,W,GApCRI,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1b501ff.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nimport './card.styles.component.css'\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n    <img \r\n    alt='monster' \r\n    src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2> {props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css'\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n    ))}\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n);","import React from 'react';\n\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.components'\n\nimport { SearchBox } from './components/search-box/search-box.component'\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users =>this.setState({ monsters: users}));\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const monsters = this.state.monsters;\n    const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n  return (\n    <div className='App' >\n      <h1>Monsters Gallery</h1>\n      <SearchBox\n        placeholder='search monsters'\n        handleChange={e => this.setState({searchField: e.target.value})}\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}